name: ci

on:
  push:
#    tags:
#      - 'v*'

permissions:
  contents: write
  checks: write

  actions: read
  issues: read
  packages: write
  pull-requests: read
  repository-projects: read
  statuses: read

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [21]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: false

      - name: Setup node env 🏗
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
          registry-url: 'https://registry.npmjs.org'

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache node_modules 📦
        uses: actions/cache@v4
        id: bun-cache
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies 👨🏻‍💻
        id: bun-install
        run: bun install

      - name: Build
        run: bun run build

      - name: Create tar.gz file
        run: tar -czvf "Release-${{steps.tag.outputs.tag}}".tar.gz webview-dist/*

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "Release-${{steps.tag.outputs.tag}}"
          path: "Release-${{steps.tag.outputs.tag}}.tar.gz"
          overwrite: true
          retention-days: 1

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            This is the release for version ${{ github.ref }}.
          draft: false
          prerelease: false

      - name: Upload tar release
        uses: alexellis/upload-assets@0.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["Release-*.tar.gz"]'

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
