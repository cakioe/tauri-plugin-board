{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "PermissionFile",
  "description": "Permission file that can define a default permission, a set of permissions or a list of inlined permissions.",
  "type": "object",
  "properties": {
    "default": {
      "description": "The default permission set for the plugin",
      "anyOf": [
        {
          "$ref": "#/definitions/DefaultPermission"
        },
        {
          "type": "null"
        }
      ]
    },
    "set": {
      "description": "A list of permissions sets defined",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PermissionSet"
      }
    },
    "permission": {
      "description": "A list of inlined permissions",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/Permission"
      }
    }
  },
  "definitions": {
    "DefaultPermission": {
      "description": "The default permission set of the plugin.\n\nWorks similarly to a permission with the \"default\" identifier.",
      "type": "object",
      "required": [
        "permissions"
      ],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        },
        "description": {
          "description": "Human-readable description of what the permission does. Tauri convention is to use <h4> headings in markdown content for Tauri documentation generation purposes.",
          "type": [
            "string",
            "null"
          ]
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PermissionSet": {
      "description": "A set of direct permissions grouped together under a new name.",
      "type": "object",
      "required": [
        "description",
        "identifier",
        "permissions"
      ],
      "properties": {
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does.",
          "type": "string"
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionKind"
          }
        }
      }
    },
    "Permission": {
      "description": "Descriptions of explicit privileges of commands.\n\nIt can enable commands to be accessible in the frontend of the application.\n\nIf the scope is defined it can be used to fine grain control the access of individual or multiple commands.",
      "type": "object",
      "required": [
        "identifier"
      ],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        },
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does. Tauri internal convention is to use <h4> headings in markdown content for Tauri documentation generation purposes.",
          "type": [
            "string",
            "null"
          ]
        },
        "commands": {
          "description": "Allowed or denied commands when using this permission.",
          "default": {
            "allow": [],
            "deny": []
          },
          "allOf": [
            {
              "$ref": "#/definitions/Commands"
            }
          ]
        },
        "scope": {
          "description": "Allowed or denied scoped when using this permission.",
          "allOf": [
            {
              "$ref": "#/definitions/Scopes"
            }
          ]
        },
        "platforms": {
          "description": "Target platforms this permission applies. By default all platforms are affected by this permission.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Target"
          }
        }
      }
    },
    "Commands": {
      "description": "Allowed and denied commands inside a permission.\n\nIf two commands clash inside of `allow` and `deny`, it should be denied by default.",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Allowed command.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deny": {
          "description": "Denied command, which takes priority.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Scopes": {
      "description": "An argument for fine grained behavior control of Tauri commands.\n\nIt can be of any serde serializable type and is used to allow or prevent certain actions inside a Tauri command. The configured scope is passed to the command and will be enforced by the command implementation.\n\n## Example\n\n```json { \"allow\": [{ \"path\": \"$HOME/**\" }], \"deny\": [{ \"path\": \"$HOME/secret.txt\" }] } ```",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Data that defines what is allowed by the scope.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        "deny": {
          "description": "Data that defines what is denied by the scope. This should be prioritized by validation logic.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Value"
          }
        }
      }
    },
    "Value": {
      "description": "All supported ACL values.",
      "anyOf": [
        {
          "description": "Represents a null JSON value.",
          "type": "null"
        },
        {
          "description": "Represents a [`bool`].",
          "type": "boolean"
        },
        {
          "description": "Represents a valid ACL [`Number`].",
          "allOf": [
            {
              "$ref": "#/definitions/Number"
            }
          ]
        },
        {
          "description": "Represents a [`String`].",
          "type": "string"
        },
        {
          "description": "Represents a list of other [`Value`]s.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        {
          "description": "Represents a map of [`String`] keys to [`Value`]s.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Value"
          }
        }
      ]
    },
    "Number": {
      "description": "A valid ACL number.",
      "anyOf": [
        {
          "description": "Represents an [`i64`].",
          "type": "integer",
          "format": "int64"
        },
        {
          "description": "Represents a [`f64`].",
          "type": "number",
          "format": "double"
        }
      ]
    },
    "Target": {
      "description": "Platform target.",
      "oneOf": [
        {
          "description": "MacOS.",
          "type": "string",
          "enum": [
            "macOS"
          ]
        },
        {
          "description": "Windows.",
          "type": "string",
          "enum": [
            "windows"
          ]
        },
        {
          "description": "Linux.",
          "type": "string",
          "enum": [
            "linux"
          ]
        },
        {
          "description": "Android.",
          "type": "string",
          "enum": [
            "android"
          ]
        },
        {
          "description": "iOS.",
          "type": "string",
          "enum": [
            "iOS"
          ]
        }
      ]
    },
    "PermissionKind": {
      "type": "string",
      "oneOf": [
        {
          "description": "allow-exec-shipment -> Enables the exec_shipment command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-exec-shipment"
          ]
        },
        {
          "description": "deny-exec-shipment -> Denies the exec_shipment command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-exec-shipment"
          ]
        },
        {
          "description": "allow-get-box-status -> Enables the get_box_status command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-get-box-status"
          ]
        },
        {
          "description": "deny-get-box-status -> Denies the get_box_status command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-get-box-status"
          ]
        },
        {
          "description": "allow-get-build-board -> Enables the get_build_board command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-get-build-board"
          ]
        },
        {
          "description": "deny-get-build-board -> Denies the get_build_board command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-get-build-board"
          ]
        },
        {
          "description": "allow-get-build-env -> Enables the get_build_env command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-get-build-env"
          ]
        },
        {
          "description": "deny-get-build-env -> Denies the get_build_env command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-get-build-env"
          ]
        },
        {
          "description": "allow-get-drop-status -> Enables the get_drop_status command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-get-drop-status"
          ]
        },
        {
          "description": "deny-get-drop-status -> Denies the get_drop_status command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-get-drop-status"
          ]
        },
        {
          "description": "allow-get-serial-devices-path -> Enables the get_serial_devices_path command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-get-serial-devices-path"
          ]
        },
        {
          "description": "deny-get-serial-devices-path -> Denies the get_serial_devices_path command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-get-serial-devices-path"
          ]
        },
        {
          "description": "allow-get-shipment-status -> Enables the get_shipment_status command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-get-shipment-status"
          ]
        },
        {
          "description": "deny-get-shipment-status -> Denies the get_shipment_status command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-get-shipment-status"
          ]
        },
        {
          "description": "allow-get-x-pos -> Enables the get_x_pos command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-get-x-pos"
          ]
        },
        {
          "description": "deny-get-x-pos -> Denies the get_x_pos command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-get-x-pos"
          ]
        },
        {
          "description": "allow-get-x-status -> Enables the get_x_status command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-get-x-status"
          ]
        },
        {
          "description": "deny-get-x-status -> Denies the get_x_status command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-get-x-status"
          ]
        },
        {
          "description": "allow-get-y-pos -> Enables the get_y_pos command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-get-y-pos"
          ]
        },
        {
          "description": "deny-get-y-pos -> Denies the get_y_pos command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-get-y-pos"
          ]
        },
        {
          "description": "allow-get-y-status -> Enables the get_y_status command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-get-y-status"
          ]
        },
        {
          "description": "deny-get-y-status -> Denies the get_y_status command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-get-y-status"
          ]
        },
        {
          "description": "allow-open-file-manager -> Enables the open_file_manager command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-open-file-manager"
          ]
        },
        {
          "description": "deny-open-file-manager -> Denies the open_file_manager command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-open-file-manager"
          ]
        },
        {
          "description": "allow-open-main-activity -> Enables the open_main_activity command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-open-main-activity"
          ]
        },
        {
          "description": "deny-open-main-activity -> Denies the open_main_activity command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-open-main-activity"
          ]
        },
        {
          "description": "allow-open-setting-config -> Enables the open_setting_config command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-open-setting-config"
          ]
        },
        {
          "description": "deny-open-setting-config -> Denies the open_setting_config command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-open-setting-config"
          ]
        },
        {
          "description": "allow-reboot -> Enables the reboot command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-reboot"
          ]
        },
        {
          "description": "deny-reboot -> Denies the reboot command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-reboot"
          ]
        },
        {
          "description": "allow-reset-lift -> Enables the reset_lift command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-reset-lift"
          ]
        },
        {
          "description": "deny-reset-lift -> Denies the reset_lift command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-reset-lift"
          ]
        },
        {
          "description": "allow-run-moto -> Enables the run_moto command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-run-moto"
          ]
        },
        {
          "description": "deny-run-moto -> Denies the run_moto command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-run-moto"
          ]
        },
        {
          "description": "allow-set-app-brightness -> Enables the set_app_brightness command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-app-brightness"
          ]
        },
        {
          "description": "deny-set-app-brightness -> Denies the set_app_brightness command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-app-brightness"
          ]
        },
        {
          "description": "allow-set-gesture-status-bar -> Enables the set_gesture_status_bar command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-gesture-status-bar"
          ]
        },
        {
          "description": "deny-set-gesture-status-bar -> Denies the set_gesture_status_bar command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-gesture-status-bar"
          ]
        },
        {
          "description": "allow-set-lcd-on-off -> Enables the set_lcd_on_off command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-lcd-on-off"
          ]
        },
        {
          "description": "deny-set-lcd-on-off -> Denies the set_lcd_on_off command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-lcd-on-off"
          ]
        },
        {
          "description": "allow-set-power-on-off-time -> Enables the set_power_on_off_time command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-power-on-off-time"
          ]
        },
        {
          "description": "deny-set-power-on-off-time -> Denies the set_power_on_off_time command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-power-on-off-time"
          ]
        },
        {
          "description": "allow-set-status-bar -> Enables the set_status_bar command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-status-bar"
          ]
        },
        {
          "description": "deny-set-status-bar -> Denies the set_status_bar command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-status-bar"
          ]
        },
        {
          "description": "allow-shutdown -> Enables the shutdown command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-shutdown"
          ]
        },
        {
          "description": "deny-shutdown -> Denies the shutdown command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-shutdown"
          ]
        },
        {
          "description": "allow-take-screen-shot -> Enables the take_screen_shot command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-take-screen-shot"
          ]
        },
        {
          "description": "deny-take-screen-shot -> Denies the take_screen_shot command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-take-screen-shot"
          ]
        }
      ]
    }
  }
}